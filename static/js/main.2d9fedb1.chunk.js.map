{"version":3,"sources":["komponentit/Frontpage.js","App.js","index.js"],"names":["useStyles","makeStyles","background","maxWidth","minHeight","display","flexWrap","justifyContent","searchContainer","padding","height","searchBtn","width","fontSize","searchField","marginRight","borderRadius","backgroundColor","paper","thumbnail","boxShadow","margin","listItem","marginBottom","player","position","paddingBottom","paddinTop","overflow","iframe","top","left","playlist","maxHeight","playlistContainer","flexDirection","playlistIconsContainer","Frontpage","setPlaylist","shiftPlaylist","currentVideo","setCurrentVideo","styles","useState","searchItems","setSearchItems","searchActive","setSearchActive","q","useRef","searchVideos","e","a","preventDefault","parameters","current","fetch","connection","json","results","items","alert","Container","className","align","onSubmit","TextField","fullWidth","variant","classes","root","label","onChange","target","value","color","Button","type","length","Typography","style","paddingTop","searchResultsContainer","Dialog","open","onClose","List","map","video","idx","ListItem","src","snippet","thumbnails","medium","url","alt","ListItemText","title","ListItemIcon","IconButton","onClick","filter","playlistVideo","id","videoId","updatedPlaylist","addToPlaylist","opts","playerVars","autoplay","onEnd","Paper","i","console","log","moveUpOnPlaylist","moveDownOnPlaylist","playVideo","removeVideo","App","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","lastVideo","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d9fedb1.chunk.js","sourcesContent":["import {\r\n  Button,\r\n  Container,\r\n  makeStyles,\r\n  TextField,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  IconButton,\r\n  Dialog,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport { useRef, useState } from \"react\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport YouTube from \"react-youtube\";\r\n\r\nconst useStyles = makeStyles({\r\n  background: {\r\n    background:\r\n      \"linear-gradient(180deg, rgb(245,245,245) 0%, rgb(185,185,185) 9%)\",\r\n    maxWidth: \"100vw\",\r\n    minHeight: \"100vh\",\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"center\",\r\n  },\r\n  searchContainer: {\r\n    padding: 10,\r\n    height: 80,\r\n  },\r\n  searchBtn: {\r\n    height: 55,\r\n    width: \"15%\",\r\n    fontSize: \"1rem\",\r\n  },\r\n  searchField: {\r\n    width: \"75%\",\r\n    marginRight: 10,\r\n    borderRadius: 5,\r\n    backgroundColor: \"rgb(245,245,245)\",\r\n  },\r\n\r\n  paper: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    minHeight: 200,\r\n    padding: 0,\r\n  },\r\n  thumbnail: {\r\n    width: \"30%\",\r\n    maxWidth: 300,\r\n    boxShadow: \"black 0 0 3px 3px\",\r\n    margin: 10,\r\n  },\r\n  listItem: {\r\n    marginBottom: 5,\r\n    backgroundColor: \"rgb(245,245,245)\",\r\n  },\r\n  player: {\r\n    position: \"relative\",\r\n    paddingBottom: \"56.25%\",\r\n    paddinTop: 35,\r\n    height: 0,\r\n    overflow: \"hidden\",\r\n  },\r\n  iframe: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  playlist: {\r\n    width: \"100%\",\r\n    overflow: \"auto\",\r\n    maxHeight: \"60vh\",\r\n  },\r\n  playlistContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    maxWidth: 450,\r\n    width: \"100%\",\r\n    maxHeight: \"100vh\",\r\n  },\r\n  playlistIconsContainer: {\r\n    width: 20,\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n});\r\n\r\nexport function Frontpage({\r\n  playlist,\r\n  setPlaylist,\r\n  shiftPlaylist,\r\n  currentVideo,\r\n  setCurrentVideo,\r\n}) {\r\n  const styles = useStyles();\r\n  const apiKey = \"AIzaSyAKmoCQkY1etaVDk9g8palzbRqQ9pmgly4\";\r\n  const [searchItems, setSearchItems] = useState([]);\r\n  const [searchActive, setSearchActive] = useState(false);\r\n  const q = useRef(\"\");\r\n\r\n  const inputHandler = (e) => {\r\n    q.current = e.target.value;\r\n  };\r\n\r\n  const searchVideos = async (e) => {\r\n    e.preventDefault();\r\n    setSearchActive(true);\r\n    try {\r\n      const parameters = `part=snippet&maxResults=10&q=${q.current}&type=video&key=${apiKey}`;\r\n      const connection = await fetch(\r\n        `https://www.googleapis.com/youtube/v3/search?${parameters}`\r\n      );\r\n      const results = await connection.json();\r\n      setSearchItems(results.items);\r\n    } catch (error) {\r\n      alert(`Error in search: ${error}`);\r\n    }\r\n  };\r\n  const addToPlaylist = (video) => {\r\n    const videosWithSameId = playlist.filter((playlistVideo) => {\r\n      return playlistVideo.id.videoId === video.id.videoId;\r\n    });\r\n    if (videosWithSameId.length === 0) {\r\n      const updatedPlaylist = [video, ...playlist];\r\n      setPlaylist([...updatedPlaylist]);\r\n    }\r\n    setSearchActive(false);\r\n  };\r\n\r\n  const moveUpOnPlaylist = (video) => {\r\n    const updatedPlaylist = playlist;\r\n\r\n    for (let i = 1; i < playlist.length; i++) {\r\n      if (video.id.videoId === playlist[i].id.videoId) {\r\n        updatedPlaylist[i] = playlist[i - 1];\r\n        updatedPlaylist[i - 1] = video;\r\n        i += playlist.length;\r\n      }\r\n    }\r\n    setPlaylist([...updatedPlaylist]);\r\n\r\n    console.log(updatedPlaylist);\r\n  };\r\n  const moveDownOnPlaylist = (video) => {\r\n    const updatedPlaylist = playlist;\r\n\r\n    for (let i = 0; i < playlist.length - 1; i++) {\r\n      if (video.id.videoId === playlist[i].id.videoId) {\r\n        updatedPlaylist[i] = playlist[i + 1];\r\n        updatedPlaylist[i + 1] = video;\r\n        i += playlist.length;\r\n      }\r\n    }\r\n    setPlaylist([...updatedPlaylist]);\r\n  };\r\n  const removeVideo = (video) => {\r\n    const updatedPlaylist = playlist.filter((playlistVideo) => {\r\n      return playlistVideo.id.videoId !== video.id.videoId;\r\n    });\r\n    setPlaylist([...updatedPlaylist]);\r\n  };\r\n\r\n  const playVideo = (video) => {\r\n    const updatedPlaylist = playlist.filter((playlistVideo) => {\r\n      return playlistVideo.id.videoId !== video.id.videoId;\r\n    });\r\n\r\n    setPlaylist([...updatedPlaylist, video]);\r\n    setCurrentVideo(video);\r\n  };\r\n\r\n  return (\r\n    <Container className={styles.background} maxWidth={false}>\r\n      <Container\r\n        maxWidth=\"lg\"\r\n        align=\"center\"\r\n        className={styles.searchContainer}\r\n      >\r\n        <form onSubmit={searchVideos}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            classes={{ root: styles.searchField }}\r\n            label=\"Search\"\r\n            onChange={inputHandler}\r\n            color=\"secondary\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            className={styles.searchBtn}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            align=\"right\"\r\n          >\r\n            Search\r\n          </Button>\r\n          {playlist.length === 0 ? (\r\n            <Container>\r\n              <Typography variant=\"h4\" style={{ paddingTop: 50 }}>\r\n                Search and add videos on to your playlist!\r\n              </Typography>\r\n            </Container>\r\n          ) : null}\r\n        </form>\r\n      </Container>\r\n\r\n      <Container maxWidth=\"md\" className={styles.searchResultsContainer}>\r\n        <Dialog open={searchActive} onClose={() => setSearchActive(false)}>\r\n          <List>\r\n            {searchItems.map((video, idx) => {\r\n              return (\r\n                <ListItem className={styles.listItem} key={idx}>\r\n                  <img\r\n                    src={video.snippet.thumbnails.medium.url}\r\n                    className={styles.thumbnail}\r\n                    alt=\"thumbnail\"\r\n                  />\r\n                  <ListItemText>\r\n                    <Typography variant=\"h6\">{video.snippet.title}</Typography>\r\n                  </ListItemText>\r\n                  <ListItemIcon>\r\n                    <IconButton onClick={() => addToPlaylist(video)}>\r\n                      <AddIcon fontSize=\"large\" color=\"secondary\" />\r\n                    </IconButton>\r\n                  </ListItemIcon>\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        </Dialog>\r\n      </Container>\r\n\r\n      <Container>\r\n        <div className={styles.player}>\r\n          {currentVideo ? (\r\n            <YouTube\r\n              className={styles.iframe}\r\n              videoId={currentVideo.id.videoId}\r\n              opts={{ playerVars: { autoplay: 1 } }}\r\n              onEnd={() => shiftPlaylist()}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </Container>\r\n      {currentVideo ? (\r\n        <Container className={styles.playlistContainer}>\r\n          <Typography variant=\"h5\">Currently playing:</Typography>\r\n          <Paper style={{ padding: 10, marginBottom: 10 }}>\r\n            <Typography variant=\"h7\">{currentVideo.snippet.title}</Typography>\r\n          </Paper>\r\n\r\n          <Typography variant=\"h5\">Up next:</Typography>\r\n          <List className={styles.playlist}>\r\n            {playlist.map((video) => {\r\n              return (\r\n                <ListItem className={styles.listItem} key={video.id.videoId}>\r\n                  <img\r\n                    src={video.snippet.thumbnails.medium.url}\r\n                    className={styles.thumbnail}\r\n                    alt=\"thumbnail\"\r\n                  />\r\n                  <ListItemText>\r\n                    <Typography>{video.snippet.title}</Typography>\r\n                  </ListItemText>\r\n                  <ListItemIcon className={styles.playlistIconsContainer}>\r\n                    <IconButton onClick={() => moveUpOnPlaylist(video)}>\r\n                      <ArrowUpwardIcon fontSize=\"small\" color=\"secondary\" />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => moveDownOnPlaylist(video)}>\r\n                      <ArrowDownwardIcon fontSize=\"small\" color=\"secondary\" />\r\n                    </IconButton>\r\n                  </ListItemIcon>\r\n                  <ListItemIcon className={styles.playlistIconsContainer}>\r\n                    <IconButton onClick={() => playVideo(video)}>\r\n                      <PlayArrowIcon fontSize=\"small\" color=\"secondary\" />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => removeVideo(video)}>\r\n                      <DeleteForeverIcon fontSize=\"small\" color=\"secondary\" />\r\n                    </IconButton>\r\n                  </ListItemIcon>\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        </Container>\r\n      ) : null}\r\n    </Container>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\nimport { Frontpage } from \"./komponentit/Frontpage\";\n\nfunction App() {\n  const [playlist, setPlaylist] = useState([]);\n  const [currentVideo, setCurrentVideo] = useState();\n\n  const savePlaylist = () => {\n    localStorage.setItem(\"playlist\", JSON.stringify(playlist));\n  };\n\n  const openPlaylist = () => {\n    if (localStorage.getItem(\"playlist\")) {\n      setPlaylist(JSON.parse(localStorage.getItem(\"playlist\")));\n    } else {\n      setPlaylist([]);\n    }\n  };\n\n  useEffect(() => {\n    openPlaylist();\n  }, []);\n\n  useEffect(() => {\n    savePlaylist();\n    if (!currentVideo) {\n      setCurrentVideo(playlist[playlist.length - 1]);\n    }\n  }, [playlist]);\n\n  const shiftPlaylist = () => {\n    const lastVideo = playlist[0];\n    const updatedPlaylist = playlist.filter((video) => {\n      return video.id.videoId !== lastVideo.id.videoId;\n    });\n    updatedPlaylist.push(lastVideo);\n    setPlaylist([...updatedPlaylist]);\n    setCurrentVideo(playlist[0]);\n  };\n\n  return (\n    <Frontpage\n      playlist={playlist}\n      setPlaylist={setPlaylist}\n      shiftPlaylist={shiftPlaylist}\n      currentVideo={currentVideo}\n      setCurrentVideo={setCurrentVideo}\n    />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"@fontsource/roboto/\";\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}